/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    systemProperty "java.library.path", "build/natives/lib"
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task runJniRattler(type: JavaExec) {
    dependsOn build
    description = "Run the rattler jni integration"
    classpath = sourceSets.main.runtimeClasspath
    systemProperty "java.library.path", "/Users/alxhill/dev/rust/rattler/target/debug"
    main = "org.mamba.rattler.Rattler"
    args "testing"
}